services:
  julia-run-default-sphere:
    container_name: "julia-run-default-sphere"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=sphere
      - METHOD=default
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 1/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d default cvt $$f; done; done; done"]
  julia-run-default-rosenbrock:
    container_name: "julia-run-default-rosenbrock"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rosenbrock
      - METHOD=default
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 2/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d default cvt $$f; done; done; done"]
  julia-run-default-rastrigin:
    container_name: "julia-run-default-rastrigin"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rastrigin
      - METHOD=default
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 3/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d default cvt $$f; done; done; done"]
  julia-run-de-sphere:
    container_name: "julia-run-de-sphere"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=sphere
      - METHOD=de
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 1/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d de cvt $$f; done; done; done"]
  julia-run-de-rosenbrock:
    container_name: "julia-run-de-rosenbrock"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rosenbrock
      - METHOD=de
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 2/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d de cvt $$f; done; done; done"]
  julia-run-de-rastrigin:
    container_name: "julia-run-de-rastrigin"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rastrigin
      - METHOD=de
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 3/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d de cvt $$f; done; done; done"]
  julia-run-abc-sphere:
    container_name: "julia-run-abc-sphere"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=sphere
      - METHOD=abc
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 1/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d abc cvt $$f; done; done; done"]
  julia-run-abc-rosenbrock:
    container_name: "julia-run-abc-rosenbrock"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rosenbrock
      - METHOD=abc
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 2/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d abc cvt $$f; done; done; done"]
  julia-run-abc-rastrigin:
    container_name: "julia-run-abc-rastrigin"
    tty: true
    build:
      context: .
      dockerfile: Dockerfile.run
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rastrigin
      - METHOD=abc
      - D=10 50 100 500 1000
      - LOOP=<LoopContext 3/3>
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 6G
    command: ["sh", "-c", "for i in $$LOOP; do echo $$i; for f in $$FUNCTION; do for d in $$D; do julia main.jl $$d abc cvt $$f; done; done; done"]

networks:
  default:
    driver: bridge