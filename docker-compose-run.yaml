services:
  julia-run-sphere-default:
    container_name: "julia-run-sphere-default"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=sphere
      - METHOD=default
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "default" "sphere" "$D"; done"
  julia-run-sphere-abc:
    container_name: "julia-run-sphere-abc"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=sphere
      - METHOD=abc
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "abc" "sphere" "$D"; done"
  julia-run-rastrigin-default:
    container_name: "julia-run-rastrigin-default"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rastrigin
      - METHOD=default
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "default" "rastrigin" "$D"; done"
  julia-run-rastrigin-abc:
    container_name: "julia-run-rastrigin-abc"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rastrigin
      - METHOD=abc
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "abc" "rastrigin" "$D"; done"
  julia-run-rosenbrock-default:
    container_name: "julia-run-rosenbrock-default"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rosenbrock
      - METHOD=default
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "default" "rosenbrock" "$D"; done"
  julia-run-rosenbrock-abc:
    container_name: "julia-run-rosenbrock-abc"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=rosenbrock
      - METHOD=abc
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "abc" "rosenbrock" "$D"; done"
  julia-run-griewank-default:
    container_name: "julia-run-griewank-default"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=griewank
      - METHOD=default
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "default" "griewank" "$D"; done"
  julia-run-griewank-abc:
    container_name: "julia-run-griewank-abc"
    tty: true
    build:
      context: .
      dockerfile: Dockerjuliarun
    working_dir: /root/src
    volumes:
      - ./src:/root/src
    networks:
      - default
    environment:
      - TZ=Asia/Tokyo
      - FUNCTION=griewank
      - METHOD=abc
    deploy:
      resources:
        limits:
          cpus: 4.5
          memory: 8G
    command: sh -c "for D in 10 20 50 100 200 500 1000; do julia /root/src/main.jl "abc" "griewank" "$D"; done"

networks:
  default:
    driver: bridge